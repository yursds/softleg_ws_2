# Parametri di configurazione per l'ambiente gym

default : &default

  env_id     : 'EnvRLILC-v1' # environment name

  taskT      : 3.0     # task duration [s]
  stayT      : 0.0
  f_robot    : 500     # robot update frequency [Hz]
  scaling    : 10      # scaling factor of frequency (f_policy w.r.t. f_robot)
  noise_q    : 0.0
  n_ep_reset : 5       # number of episode to use in a single policy update
  n_envs     : 16      # number of environment
  n_update   : 200     # number of policy update
  le         : 0.0002
  lde        : 0.0004
  ldde       : 0.0008
  kp         : 0.04
  kv         : 0.025
  chunks     : 8
  fl_noILC   : False
  seed       : 42

single_task : &single_task
  <<: *default

  f_robot    : 100     # robot update frequency [Hz]
  scaling    : 2      # scaling factor of frequency (f_policy w.r.t. f_robot)

  info  : 'single_task -> set task_i = 0 torch.tensor([[-0.25,0.0+task_i*0.05]]).T'

single_task_no_ILC : &no_ILC
  <<: *default
  le        : 0.0
  lde       : 0.0
  ldde      : 0.0
  f_robot   : 100     # robot update frequency [Hz]
  scaling   : 2      # scaling factor of frequency (f_policy w.r.t. f_robot)
  fl_noILC  : True
  info      : 'ILC is not used during the training, single_task -> set task_i = 0 torch.tensor([[-0.25,0.0+task_i*0.05]]).T'


multi_task : &multi_task
  <<: *default

  env_id     : 'EnvRLILC' # environment name

  f_robot    : 100     # robot update frequency [Hz]
  scaling    : 2      # scaling factor of frequency (f_policy w.r.t. f_robot)

  info  : 'multi task: \n\
        if (task_i+1) % 4 == 0: \n\
            pf = torch.tensor([[0.0, 0.0]]).T \n\
        elif (task_i+1) % 3 == 0: \n\
            pf = torch.tensor([[-0.25, 0.15]]).T \n\
        elif (task_i+1) % 2 == 0: \n\
            pf = torch.tensor([[-0.25, -0.15]]).T \n\
        elif (task_i+1) % 1 == 0: \n\
            pf = torch.tensor([[-0.25, 0.0]]).T'

multi_task-v2 : &multi_task-v2
  <<: *multi_task

  env_id     : 'EnvRLinILC' # environment name

  f_robot    : 100     # robot update frequency [Hz]
  scaling    : 2      # scaling factor of frequency (f_policy w.r.t. f_robot)

  n_envs     : 16      # number of environment

  chunks     : 8
  info  : 'multi task: points in the circle with radius 0.15 with center in -0.15 w.r.t ee'

multi_task_noILC-v2 : &multi_task_noILC-v2
  <<: *multi_task-v2

  fl_noILC   : True
  info  : 'ILC is not used during the training. multi task: points in the circle with radius 0.15 with center in -0.15 w.r.t ee'

multi_task_strong-v2 : &multi_task_strong-v2
  <<: *multi_task-v2

  env_id     : 'EnvStrongRLinILC' # environment name





test :
  <<: *multi_task
  env_id     : 'EnvRLinILC' # environment name

  f_robot    : 100     # robot update frequency [Hz]
  scaling    : 2      # scaling factor of frequency (f_policy w.r.t. f_robot)
  n_ep_reset : 5       # number of episode to use in a single policy update
  